name: Quick Test Bot

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Safety limit for the whole job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Temporarily move test files
        run: |
          if [ -d "tests" ]; then
            mv tests/* .
          fi

      - name: Run all tests with timeout
        id: run_tests
        run: |
          echo "" > raw_output.txt
          error_found=0
          for file in *.py; do
            echo "Running $file..."
            if ! timeout 10s python3 "$file" >> raw_output.txt 2>&1; then
              if [ $? -eq 124 ]; then
                echo "[TIMEOUT] $file" >> raw_output.txt
              else
                echo "[ERROR] $file" >> raw_output.txt
              fi
              error_found=1
            else
              echo "[OK] $file" >> raw_output.txt
            fi
          done
          echo "error_found=$error_found" >> $GITHUB_ENV

      - name: Move files back (cleanup)
        run: |
          if [ -d "tests" ]; then
            mkdir -p tests
            for file in *.py; do
              mv "$file" tests/
            done
          fi

      - name: Upload full logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-test-logs
          path: raw_output.txt

      - name: Post comment result
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.payload.pull_request.number;
            const success = process.env.error_found === '0';
            const message = success
              ? '✅ All tests passed!'
              : '❌ Some tests failed. Check the "full-test-logs" artifact for details.';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: message
            });

name: Quick Test Bot

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Safety limit for whole job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Temporarily move test files
        run: |
          if [ -d "tests" ]; then
            mv tests/* .
          fi

      - name: Run all tests with timeout & clean output
        id: run_tests
        run: |
          echo "" > test_results.txt
          error_found=0
          for file in *.py; do
            echo "Running $file..."
            # Run each test with 10s timeout
            if ! timeout 10s python3 "$file" >> raw_output.txt 2>&1; then
              if [ $? -eq 124 ]; then
                echo "Timeout in $file" >> raw_output.txt
              else
                echo "Error in $file" >> raw_output.txt
              fi
              error_found=1
            fi
          done
          # Strip ANSI codes and control chars
          sed 's/\x1b\[[0-9;]*[a-zA-Z]//g' raw_output.txt > test_results.txt
          echo "error_found=$error_found" >> $GITHUB_ENV

      - name: Move files back (cleanup)
        run: |
          if [ -d "tests" ]; then
            mkdir -p tests
            for file in *.py; do
              mv "$file" tests/
            done
          fi

      - name: Upload full logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-test-logs
          path: raw_output.txt

      - name: Post comment if errors
        if: env.error_found == '1'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let results = fs.readFileSync('test_results.txt', 'utf8');
            // Truncate to avoid exceeding 64KB
            if (results.length > 5000) {
              results = results.substring(0, 5000) + "\n... (output truncated)";
            }
            const issue_number = context.payload.pull_request.number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: `❌ Some tests failed or timed out:\n\n\`\`\`\n${results}\n\`\`\`\nFull logs attached as artifact.`
            });
